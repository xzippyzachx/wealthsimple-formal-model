
"WealthSimple.bcg" = generation of "WealthSimple.lnt":"Main(1, 5)";

(**)
property PROPERTY_deadlock_1
	"Deadlock free (There are no terminate states in this model)"
is
    "WealthSimple.bcg"
    |= with evaluator4
	[true*] <true> true;
	expected TRUE;
end property

property Property_liveness_w1
	"Trading a stock will involve communication with the stockMarketAPI to check stock prices, and to confirm trades. As well as other events such as balance sending."
is
    "WealthSimple.bcg"
    |= with evaluator4
	library standard.mcl end_library
	SOME(
            {UTRADE...}.
            {WSTRADE...}.
            {CONFIRMTRADE...}.
            {WSCHECKPRICE...}.
            {WSSENDPRICE...}.
            {RECEIVEPORTFOLIO...}.
            {SENDBALANCE...}
		);
	expected TRUE;
end property

property Property_safety_w2
	"A stock market API will never confirm a trade that wasn't requested"
is
    "WealthSimple.bcg"
    |= with evaluator4
	library standard.mcl end_library
	NOT_1_BEFORE_2({WSCONFIRMTRADE...}, {WSTRADE...});
	expected TRUE;
end property

property Property_liveness_w3
	"A stock market API will always confirm a trade after receiving it"
is
    "WealthSimple.bcg"
    |= with evaluator4
	library standard.mcl end_library
	AFTER_1_INEVITABLE_2({WSTRADE...}, {WSCONFIRMTRADE...});
	expected TRUE;
end property

property Property_fairness_w4
	"After performing a trade, the user can check the status of their portfolio"
is
    "WealthSimple.bcg"
    |= with evaluator4
	library standard.mcl end_library
	AFTER_1_FAIRLY_2({UTRADE...}, {CHECKPORTFOLIO...});
	expected TRUE;
end property

property Property_safety_w5_safety
	"A request to check portfolio will always be met with an immediate response"
is
    "WealthSimple.bcg"
    |= with evaluator4
	library standard.mcl end_library
	AFTER_1_INEVITABLE_2({CHECKPORTFOLIO...}, {RECEIVEPORTFOLIO...});
	expected TRUE;
end property

property Property_fairness_w6
	"After performing a trade, the user can check their balance"
is
    "WealthSimple.bcg"
    |= with evaluator4
	library standard.mcl end_library
	AFTER_1_FAIRLY_2({UTRADE...}, {SENDBALANCE...});
	expected TRUE;
end property

property PROPERTY_safety_z1
	"The stock market API will never send a stock price that wasn't being requested"
is
	"WealthSimple.bcg"
    |= with evaluator4
	library standard.mcl end_library
	NOT_1_BEFORE_2({WSSENDPRICE ...}, {WSCHECKPRICE ...});
	expected TRUE;
end property

property PROPERTY_safety_z2
	"The WealthSimple account will never send a stock price that wasn't being requested"
is
	"WealthSimple.bcg"
    |= with evaluator4
	library standard.mcl end_library
	NOT_1_BEFORE_2({SENDPRICE ...}, {CHECKPRICE ...});
	expected TRUE;
end property

property PROPERTY_liveness_z3
	"A user requesting a stock price check will eventually result in receiving the stock price"
is
	"WealthSimple.bcg"
    |= with evaluator4
	library standard.mcl end_library
	SOME({CHECKPRICE...}.true*.{SENDPRICE...});
	expected TRUE;
end property

property PROPERTY_fairness_z4
	"Performing a trade will always require checking the price stock"
is
	"WealthSimple.bcg"
    |= with evaluator4
	library standard.mcl end_library
	SOME(true*.{CONFIRMTRADE...}.{WSCHECKPRICE...});
	expected TRUE;
end property

property PROPERTY_safety_a1
	"Only user transaction and user trades can affect the user balance"
is 
	"WealthSimple.bcg"
    |= with evaluator4
	library standard.mcl end_library
	NEVER(
	{SENDBALANCE(?id:Nat ?amount:Nat)}.
	(not {UTRANSACTION...} and not {UTRADE...})*.
	{SENDBALANCE(!id ?amount2:Nat) where (amount2 <> amount)}
	);
	expected TRUE;
end property

property PROPERTY_safety_a2
	"BankAccountAPI cannot confirm a transaction before it is requested by the user, then processed by the bank"
is
	"WealthSimple.bcg"
    |= with evaluator4
	library standard.mcl end_library
	NOT_1_TO_2_UNLESS_3 ({UTRANSACTION...}, {WSCONFIRM...}, {WSTRANSACTION...});
	expected TRUE;
end property

property PROPERTY_safety_a3
	"BankAccountAPI transactions and confirmations alternate"
is
	"WealthSimple.bcg"
    |= with evaluator4
	library standard.mcl end_library
	ALTERNATE_1_THEN_2 ({WSTRANSACTION...}, {WSCONFIRM...});
	expected TRUE;
end property

property PROPERTY_safety_a4
	"A user cannot withdraw more than they have as available cash in their WealthSimple account"
is
	"WealthSimple.bcg"
    |= with evaluator4
	library standard.mcl end_library
	NEVER(
	{SENDBALANCE(?id:Nat ?amount:Nat)}.
	(not {UTRANSACTION(!id ?depositAmount:Nat ?transactType:String) where (transactType="Deposit")} 
    and not {UTRADE...})*.
	{WSCONFIRM(!id ?amount2:Nat ?transactConfirm:String) where (amount2 > amount)}
	);
	expected TRUE;
end property

property PROPERTY_safety_a5
	"WealthSimple balance is a correctly updated after bank deposits"
is
	"WealthSimple.bcg"
    |= with evaluator4
	library standard.mcl end_library
	NEVER(
	{SENDBALANCE(?id:Nat ?originalBalance:Nat)}.
    (not {UTRADE...} and not {UTRANSACTION...})*.
	{UTRANSACTION(!id ?depositAmount:Nat ?transactType:String) where (transactType="Deposit")}.
	(not {UTRADE...} and not {UTRANSACTION...})*.
	{SENDBALANCE(!id ?newBalance:Nat) where (originalBalance + depositAmount) <> newBalance}
	);
	expected TRUE;
end property

property PROPERTY_safety_a6
	"WealthSimple balance is a correctly updated after bank withdrawal"
is
	"WealthSimple.bcg"
    |= with evaluator4
	library standard.mcl end_library
	NEVER(
	{SENDBALANCE(?id:Nat ?originalBalance:Nat)}.
    (not {UTRADE...} and not {UTRANSACTION...})*.
	{UTRANSACTION(!id ?depositAmount:Nat ?transactType:String) where (transactType="Withdraw")}.
	(not {UTRADE...} and not {UTRANSACTION...})*.
	{SENDBALANCE(!id ?newBalance:Nat) where (originalBalance - depositAmount) <> newBalance}
	);
	expected TRUE;
end property

property PROPERTY_liveness_a7
	"A user requesting their balance will eventually result in receiving their balance"
is
	"WealthSimple.bcg"
    |= with evaluator4
	library standard.mcl end_library
	SOME({GETBALANCE...}.true*.{SENDBALANCE...});
	expected TRUE;
end property
