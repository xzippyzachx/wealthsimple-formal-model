module WealthSimple with set, get is

    channel Uid is (id: Nat) end channel
    channel Balance is (id: Nat, b: Nat) end channel
    channel Amount is (id: Nat, a: Nat) end channel

    type BalanceArray is
        array [1 .. 5] of Nat
    end type

    process User [DISPLAYBALANCE, GETBALANCE: Uid, RECIVEBALANCE: Balance, DEPOSIT: Amount, WITHDRAW: Amount] (ID: Nat) is
        var disBalance: Nat, waiting: bool in
            disBalance := 0;
            waiting := false;
            loop
                select
                    if waiting == false then
                        GETBALANCE(ID);
                        waiting := true
                    end if
                []
                    var uid: Nat, newBalance: Nat in
                        RECIVEBALANCE(?uid, ?newBalance);
                        if uid == ID then
                            disBalance := newBalance;
                            waiting := false
                        end if
                    end var
                []
                    if (waiting == false) and (disBalance != 0) then
                        DISPLAYBALANCE(disBalance) -- Temp proccess cuz I don't know how to display values. If we even can?
                    end if
                []
                    if waiting == false then
                        var a: Nat in
                            DEPOSIT(ID, ?a) where (a == 5) or (a == 10) or (a == 20)
                        end var;
                        waiting := true
                    end if
                []
                    if (waiting == false) then
                        var a: Nat in
                            WITHDRAW(ID, ?a) where (a == 5) or (a == 10) or (a == 20)
                        end var;
                        waiting := true
                    end if
                end select
            end loop
        end var
    end process

    process WSAccount [GETBALANCE: Uid, SENDBALANCE: Balance, DEPOSIT: Amount, WITHDRAW: Amount] is
        var balances: BalanceArray in

            -- Init balances
            balances := BalanceArray(0 of Nat);

            loop
                var uid: Nat in
                    select
                        GETBALANCE(?uid);
                        SENDBALANCE(uid, balances[uid])
                    []
                        var amount: Nat in
                            DEPOSIT(?uid, ?amount);
                            if (uid < 6) and (balances[uid] <= 235) then
                                balances[uid] := balances[uid] + amount
                            end if;
                            SENDBALANCE(uid, balances[uid])
                        end var
                    []
                        var amount: Nat in
                            WITHDRAW(?uid, ?amount);
                            if (uid < 6) and (balances[uid] >= amount) then
                                balances[uid] := balances[uid] - amount
                            end if;
                            SENDBALANCE(uid, balances[uid])
                        end var
                    end select
                end var
            end loop
        end var
    end process

    process Main [DISPLAYBALANCE, GETBALANCE: Uid, SENDBALANCE: Balance, DEPOSIT: Amount, WITHDRAW: Amount] is
        var u1: Nat in
            u1 := 1;
            par GETBALANCE, SENDBALANCE, DEPOSIT, WITHDRAW in
                WSAccount [GETBALANCE, SENDBALANCE, DEPOSIT, WITHDRAW]
                ||
                User [DISPLAYBALANCE, GETBALANCE, SENDBALANCE, DEPOSIT, WITHDRAW] (u1)
            end par
        end var
    end process

end module